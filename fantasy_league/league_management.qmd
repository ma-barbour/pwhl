---
title: "League Management"
format: html
editor: visual
---

## Basic Setup

```{r}

setwd("~/18_skaters/r_studio/pwhl/fantasy_league")

library(tidyverse)
library(jsonlite)
library(httr)
library(googledrive)
library(googlesheets4)

```

## Team URLs

```{r}

teams <- c("Boston", 
           "Minnesota", 
           "MontrÃ©al", 
           "New York", 
           "Ottawa", 
           "Toronto")  

logo_urls <- c("https://assets.leaguestat.com/pwhl/logos/1_4.png",
               "https://assets.leaguestat.com/pwhl/logos/2_4.png",
               "https://assets.leaguestat.com/pwhl/logos/3_4.png",
               "https://assets.leaguestat.com/pwhl/logos/4_4.png",
               "https://assets.leaguestat.com/pwhl/logos/5_4.png",
               "https://assets.leaguestat.com/pwhl/logos/6_4.png")

team_logos <- tibble(team = teams,
                     logo_url = logo_urls)

```

## PWHL Rosters

```{r}

pwhl_rosters <- read_rds("pwhl_rosters.rds")

```

## Get Schedule

### Pull Schedule

```{r}

schedule_url <- "https://lscluster.hockeytech.com/feed/index.php?feed=statviewfeed&view=schedule&team=-1&season=5&location=homeaway&key=446521baf8c38984&client_code=pwhl&site_id=0&league_id=1&conference_id=-1&division_id=-1&lang=en&callback=angular.callbacks._5"

schedule_data_raw <- GET(schedule_url) |>
        content("text",
                encoding = "UTF-8") %>%
        sub("angular.callbacks._5(", "", ., fixed = TRUE) %>%
        sub(")$", "", .) |>
        fromJSON() |>
        tibble() 

schedule_data <- schedule_data_raw[[1]][[1]] |>
        select(data) |>
        unnest_longer(1) 

schedule <- tibble(game_id = as.integer(schedule_data$data$row$game_id),
                   date = schedule_data$data$row$date_with_day,
                   home_team = schedule_data$data$row$home_team_city,
                   away_team = schedule_data$data$row$visiting_team_city)

schedule$date <- substring(schedule$date, first = 6)

schedule <- schedule |>
        mutate(date = if_else(startsWith(date, "Nov") | startsWith(date, "Dec") , paste0(date, ", 2024"), paste0(date, ", 2025")))

schedule$date <- as_date(parse_date_time(schedule$date, "mdy"))

```

### Add Fantasy Weeks

```{r}

fantasy_schedule <- schedule |>
        mutate(start_week = as_date(cut(date, breaks = "week")))

fantasy_schedule <- fantasy_schedule |>
        mutate(week_number = cut.Date(fantasy_schedule$start_week, breaks = "1 week", labels = FALSE),
               .before = start_week) 

```

### Add Team Logos

```{r}

fantasy_schedule <- fantasy_schedule |>
        left_join(team_logos, join_by(home_team == team)) |>
        rename(home_team_logo = logo_url) |>
        left_join(team_logos, join_by(away_team == team)) |>
        rename(away_team_logo = logo_url)

```

## Find Current Week Number

```{r}

current_week_number <- fantasy_schedule |>
        filter(start_week <= Sys.Date())

current_week_number <- max(current_week_number$week_number)

```

## Pull Rosters For Current Week

### Roster URLs

```{r}

roster_urls <- c("https://docs.google.com/spreadsheets/d/1b9nX7-SxLssLqPIL30NZYUnLJHXuDhcb3ni-BkjQSvM/edit?gid=0#gid=0",
                 "https://docs.google.com/spreadsheets/d/1u1Z5cquvMlzM51jApvaP1-e4A4FFprOFUwV88G9uj7w/edit?gid=0#gid=0",
                 "https://docs.google.com/spreadsheets/d/17TqxVfEKZ8kY2Pmpr_IlODhxvOh6QGyVwahnFw18z8E/edit?gid=0#gid=0",
                 "https://docs.google.com/spreadsheets/d/1Xzv7E26uSCl2FpKva6XdI1LotbKPKL1qo3jMMEHBf-U/edit?gid=0#gid=0",
                 "https://docs.google.com/spreadsheets/d/1-AIPMpluoIi5AXNYcHCccN51jf6pc6lpsr1Fl0YDvb8/edit?gid=0#gid=0",
                 "https://docs.google.com/spreadsheets/d/1Rg5h5C0UTBq5Er3rRWmmVSpRtFz2lQOvdsgG6NzoUDU/edit?gid=0#gid=0",
                 "https://docs.google.com/spreadsheets/d/1PkYGXyV0r0OgMpmaslOu3hc5EfCg7_dKWrmOM9-Z0Bs/edit?gid=0#gid=0",
                 "https://docs.google.com/spreadsheets/d/1C44Pw_CMT7_znAj8EWG-ea_Xs2pG7i07tj9baVaqr_8/edit?gid=0#gid=0",
                 "https://docs.google.com/spreadsheets/d/1p-ASD-agjG_02fvo6_2WE5X6e1F9HwwR7RZeoUROJuw/edit?gid=0#gid=0",
                 "https://docs.google.com/spreadsheets/d/1QK8dCF9lWlTtZstJQKbmKyzLwotzlOYjgpZhrAxm8uw/edit?gid=0#gid=0")

```

### Pull Rosters

```{r}

current_rosters <- list()

for(i in 1:length(roster_urls)) {
        
        roster <- read_sheet(roster_urls[i],
                             sheet = "upload_table")
        
        current_rosters[[i]] <- roster
        
}

current_rosters <- current_rosters |>
        bind_rows() |>
        mutate(week_number = current_week_number,
               .before = team_number)

```

## Legal Roster Check

```{r}

current_rosters |>
        left_join(pwhl_rosters |> select(player, pwhl_team = team),
                  by = "player") |>
        group_by(team_number, pwhl_team) |>
        unique() |>
        summarise(unique_players = n(),
                  .groups = "drop") |>
        filter(unique_players != 7)

```

### Save Rosters

```{r}

if(!file.exists("league_roster_data.rds")) {
        
        league_roster_data <- current_rosters
        
        write_rds(current_rosters, "league_roster_data.rds")
        
} else {
        
        league_roster_data <- read_rds("league_roster_data.rds")
        
        league_roster_data <- league_roster_data |>
                bind_rows(current_rosters)
        
        write_rds(league_roster_data, "league_roster_data.rds")
        
}

```

## Push League Roster Data

```{r}

sheet_write(league_roster_data |>
                    left_join(pwhl_rosters |> select(player, team) , by = "player"), 
            ss = "https://docs.google.com/spreadsheets/d/1rbnXunjXuI8KLBKPhIZ7tDvl9pmIoqM9CzjtI6xxCBY/edit?gid=1510400201#gid=1510400201", 
            sheet = "league_roster_data")

```
