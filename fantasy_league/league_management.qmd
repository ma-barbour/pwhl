---
title: "League Management"
format: html
editor: visual
---

## Introduction

This code should be run every Monday.

## Basic Setup

```{r}

setwd("~/18_skaters/r_studio/pwhl/fantasy_league")

library(tidyverse)
library(jsonlite)
library(httr)
library(googledrive)
library(googlesheets4)
library(stringi)

```

## Team URLs

```{r}

teams <- c("Boston", 
           "Minnesota", 
           "Montréal", 
           "New York", 
           "Ottawa", 
           "Toronto")  

logo_urls <- c("https://assets.leaguestat.com/pwhl/logos/1_4.png",
               "https://assets.leaguestat.com/pwhl/logos/2_4.png",
               "https://assets.leaguestat.com/pwhl/logos/3_4.png",
               "https://assets.leaguestat.com/pwhl/logos/4_4.png",
               "https://assets.leaguestat.com/pwhl/logos/5_4.png",
               "https://assets.leaguestat.com/pwhl/logos/6_4.png")

team_logos <- tibble(team = teams,
                     logo_url = logo_urls)

```

## PWHL Rosters

```{r}

pwhl_rosters <- read_rds("pwhl_rosters.rds")

```

## Game Logs

### Get Game Logs

```{r}

gl_skaters <- pwhl_rosters |>
        filter(position != "G")

player_id_gl <- gl_skaters$player_id

player_name_gl <- gl_skaters$player 

game_logs <- list()

for(i in 1:length(player_id_gl)) {
        
        print(paste("Getting Game Logs For:", player_name_gl[i]))
        
        gl_url <- paste0("https://lscluster.hockeytech.com/feed/index.php?feed=statviewfeed&view=player&player_id=", player_id_gl[i], "&season_id=5&site_id=0&key=446521baf8c38984&client_code=pwhl&league_id=&lang=en&statsType=standard&callback=angular.callbacks._4")
        
        gl_raw <- GET(gl_url) |>
                content("text",
                        encoding = "UTF-8") %>%
                sub("angular.callbacks._4(", "", ., fixed = TRUE) %>%
                sub(")$", "", .) |>
                fromJSON() 
        
        loop_data <- gl_raw[["gameByGame"]][["sections"]][[1]] |>
                tibble() |>
                select(data) |>
                unnest(1) |>
                collapse()
        
        loop_data <- tibble(
                player_id = player_id_gl[i],
                player = player_name_gl[i], 
                game_id = loop_data$prop$game$game_id$gameLink,
                date = as_date(loop_data$row$date_played),
                game = loop_data$row$game,
                toi_seconds = loop_data$row$ice_time_minutes_seconds,
                goals = as.integer(loop_data$row$goals),
                assists = as.integer(loop_data$row$assists),
                shots = as.integer(loop_data$row$shots))
        
        if (length(loop_data$player_id) > 0) {
               
                game_logs[[i]] <- loop_data 
                
        }
        
}

game_logs <- game_logs |>
        bind_rows() |>
        mutate(toi_seconds = ms(toi_seconds)) |>
        mutate(toi_seconds = period_to_seconds(toi_seconds)) |>
        mutate(toi_minutes = toi_seconds / 60,
               .after = toi_seconds) |>
        arrange(player_id, date) |>
        drop_na(toi_seconds) |>
        mutate(points = goals + assists,
               .before = goals)

game_logs <- game_logs |>
        left_join(pwhl_rosters |> select(player_id, team), by = "player_id" )

game_logs <- game_logs |>
        mutate(city = case_when(team == "Boston Fleet" ~ "Boston",
                                team == "Minnesota Frost" ~ "Minnesota",
                                team == "Montréal Victoire" ~ "Montréal",
                                team == "New York Sirens" ~ "New York",
                                team == "Ottawa Charge" ~ "Ottawa",
                                team == "Toronto Sceptres" ~ "Toronto")) |>
        left_join(team_logos, join_by(city == team)) |>
        mutate(updated = Sys.Date())

```

### Push Game Logs

```{r}

sheet_write(game_logs, 
            ss = "https://docs.google.com/spreadsheets/d/1rbnXunjXuI8KLBKPhIZ7tDvl9pmIoqM9CzjtI6xxCBY/edit?gid=1510400201#gid=1510400201", 
            sheet = "game_logs")

```

## Get Schedule

### Pull Schedule

```{r}

schedule_url <- "https://lscluster.hockeytech.com/feed/index.php?feed=statviewfeed&view=schedule&team=-1&season=5&location=homeaway&key=446521baf8c38984&client_code=pwhl&site_id=0&league_id=1&conference_id=-1&division_id=-1&lang=en&callback=angular.callbacks._5"

schedule_data_raw <- GET(schedule_url) |>
        content("text",
                encoding = "UTF-8") %>%
        sub("angular.callbacks._5(", "", ., fixed = TRUE) %>%
        sub(")$", "", .) |>
        fromJSON() |>
        tibble() 

schedule_data <- schedule_data_raw[[1]][[1]] |>
        select(data) |>
        unnest_longer(1) 

schedule <- tibble(game_id = as.integer(schedule_data$data$row$game_id),
                   date = schedule_data$data$row$date_with_day,
                   home_team = schedule_data$data$row$home_team_city,
                   away_team = schedule_data$data$row$visiting_team_city)

schedule$date <- substring(schedule$date, first = 6)

schedule <- schedule |>
        mutate(date = if_else(startsWith(date, "Nov") | startsWith(date, "Dec") , paste0(date, ", 2024"), paste0(date, ", 2025")))

schedule$date <- as_date(parse_date_time(schedule$date, "mdy"))

```

### Add Fantasy Weeks

```{r}

fantasy_schedule <- schedule |>
        mutate(start_week = as_date(cut(date, breaks = "week")))

fantasy_schedule <- fantasy_schedule |>
        mutate(week_number = cut.Date(fantasy_schedule$start_week, breaks = "1 week", labels = FALSE),
               .before = start_week) 

```

### Add Team Logos

```{r}

fantasy_schedule <- fantasy_schedule |>
        left_join(team_logos, join_by(home_team == team)) |>
        rename(home_team_logo = logo_url) |>
        left_join(team_logos, join_by(away_team == team)) |>
        rename(away_team_logo = logo_url)

```

## Find Current Week Number

```{r}

current_week_number <- fantasy_schedule |>
        filter(start_week <= Sys.Date())

current_week_number <- max(current_week_number$week_number)

```

## Pull Rosters For Current Week

### Roster URLs

```{r}

roster_urls <- c("https://docs.google.com/spreadsheets/d/1b9nX7-SxLssLqPIL30NZYUnLJHXuDhcb3ni-BkjQSvM/edit?gid=0#gid=0",
                 "https://docs.google.com/spreadsheets/d/1u1Z5cquvMlzM51jApvaP1-e4A4FFprOFUwV88G9uj7w/edit?gid=0#gid=0",
                 "https://docs.google.com/spreadsheets/d/17TqxVfEKZ8kY2Pmpr_IlODhxvOh6QGyVwahnFw18z8E/edit?gid=0#gid=0",
                 "https://docs.google.com/spreadsheets/d/1Xzv7E26uSCl2FpKva6XdI1LotbKPKL1qo3jMMEHBf-U/edit?gid=0#gid=0",
                 "https://docs.google.com/spreadsheets/d/1-AIPMpluoIi5AXNYcHCccN51jf6pc6lpsr1Fl0YDvb8/edit?gid=0#gid=0",
                 "https://docs.google.com/spreadsheets/d/1Rg5h5C0UTBq5Er3rRWmmVSpRtFz2lQOvdsgG6NzoUDU/edit?gid=0#gid=0",
                 "https://docs.google.com/spreadsheets/d/1PkYGXyV0r0OgMpmaslOu3hc5EfCg7_dKWrmOM9-Z0Bs/edit?gid=0#gid=0",
                 "https://docs.google.com/spreadsheets/d/1C44Pw_CMT7_znAj8EWG-ea_Xs2pG7i07tj9baVaqr_8/edit?gid=0#gid=0",
                 "https://docs.google.com/spreadsheets/d/1p-ASD-agjG_02fvo6_2WE5X6e1F9HwwR7RZeoUROJuw/edit?gid=0#gid=0",
                 "https://docs.google.com/spreadsheets/d/1QK8dCF9lWlTtZstJQKbmKyzLwotzlOYjgpZhrAxm8uw/edit?gid=0#gid=0")

```

### Pull Rosters

```{r}

current_rosters <- list()

for(i in 1:length(roster_urls)) {
        
        roster <- read_sheet(roster_urls[i],
                             sheet = "upload_table")
        
        current_rosters[[i]] <- roster
        
}

current_rosters <- current_rosters |>
        bind_rows() |>
        mutate(week_number = current_week_number,
               .before = team_number) |>
        mutate(player_id = parse_number(gsub("-", "", player)))

```

## Legal Roster Check

```{r}

current_rosters |>
        left_join(pwhl_rosters |> select(player, pwhl_team = team),
                  by = "player") |>
        group_by(team_number, pwhl_team) |>
        unique() |>
        summarise(unique_players = n(),
                  .groups = "drop") |>
        filter(unique_players != 7)

```

### Save Rosters

```{r}

if(!file.exists("league_roster_data.rds")) {
        
        league_roster_data <- current_rosters
        
        write_rds(current_rosters, "league_roster_data.rds")
        
} else {
        
        league_roster_data <- read_rds("league_roster_data.rds")
        
        league_roster_data <- league_roster_data |>
                bind_rows(current_rosters)
        
        write_rds(league_roster_data, "league_roster_data.rds")
        
}

```

## Push League Roster Data

```{r}

sheet_write(league_roster_data |>
                    left_join(pwhl_rosters |> select(player_id, team) , by = "player_id"), 
            ss = "https://docs.google.com/spreadsheets/d/1rbnXunjXuI8KLBKPhIZ7tDvl9pmIoqM9CzjtI6xxCBY/edit?gid=1510400201#gid=1510400201", 
            sheet = "league_roster_data")

```

## Find Last Week Number

```{r}

last_week_number <- fantasy_schedule |>
        filter(week_number < current_week_number)

last_week_number <- max(last_week_number$week_number)

```

## Pull Current Scoring Data

### Find game_ids

```{r}

game_ids <- fantasy_schedule |>
        filter(week_number == last_week_number)

game_ids <- game_ids$game_id

```

### Pull Scoring Data

```{r}

current_scoring <- list()

for(i in 1:length(game_ids)) {
        
        loop_data <- GET(paste0("https://lscluster.hockeytech.com/feed/index.php?feed=statviewfeed&view=gameSummary&game_id=", game_ids[i], "&key=446521baf8c38984&site_id=0&client_code=pwhl&lang=en&league_id=&callback=angular.callbacks._5")) |>
                content("text",
                        encoding = "UTF-8") %>%
                sub("angular.callbacks._5(", "", ., fixed = TRUE) %>%
                sub(")$", "", .) |>
                fromJSON() 
        
        loop_data <- loop_data[["periods"]][["goals"]] |>
                tibble() |>
                unnest(1) 
        
        goals_data <- tibble(first_name = loop_data$scoredBy$firstName,
                            last_name = loop_data$scoredBy$lastName,
                            player_id = loop_data$scoredBy$id)
        
        goals_data <- goals_data |>
                mutate(player = paste(first_name, last_name, player_id),
                       goal = 1) |>
                select(player, player_id, goal) 
        
        assists_data <- loop_data$assists |>
                tibble() |>
                unnest_wider(1) |>
                select(id, firstName, lastName) |>
                unnest_wider(id, names_sep = "_") |>
                unnest_wider(firstName, names_sep = "_") |>
                unnest_wider(lastName, names_sep = "_") |>
                filter(id_1 > 0)
        
        a1 <- tibble(player = paste(assists_data$firstName_1, assists_data$lastName_1, assists_data$id_1),
                     player_id = assists_data$id_1,
                     assist = 1)
        
        a2 <- tibble(player = paste(assists_data$firstName_2, assists_data$lastName_2, assists_data$id_2),
                     player_id = assists_data$id_2,
                     assist = 1)
        
        assists_data <- a1 |>
                bind_rows(a2)
        
        combined_data <- goals_data |>
                bind_rows(assists_data)
        
        combined_data[is.na(combined_data)] <- 0
        
        current_scoring[[i]] <- combined_data
        
}

current_scoring <- current_scoring |> 
        bind_rows() |>
        filter(player_id > 0) |>
        group_by(player_id) |>
        summarise(goals = sum(goal),
                  assists = sum(assist),
                  .groups = "drop") |>
        mutate(points = goals + assists) |>
        arrange(-points, -goals) |>
        mutate(week_number = last_week_number,
               .before = player_id)

```

## Update League Scoring Data

### Save Scoring Data

```{r}

if(!file.exists("league_scoring_data.rds")) {
        
        league_scoring_data <- current_scoring
        
        write_rds(current_scoring, "league_scoring_data.rds")
        
} else {
        
        league_scoring_data <- read_rds("league_scoring_data.rds")
        
        league_scoring_data <- league_scoring_data |>
                bind_rows(current_scoring)
        
        write_rds(league_scoring_data, "league_scoring_data.rds")
        
}

```

## The Whole Thing

### Fantasy Points

```{r}

the_whole_thing <- league_roster_data |>
        filter(week_number != current_week_number) |>
        left_join(league_scoring_data |> select(-player), join_by(player_id, week_number))

the_whole_thing[is.na(the_whole_thing)] <- 0

```

### Save The Whole Thing

```{r}

write_rds(the_whole_thing, "the_whole_thing.rds")

```

## Push The Whole Thing

```{r}

sheet_write(the_whole_thing |> mutate(last_update = Sys.Date()), 
            ss = "https://docs.google.com/spreadsheets/d/1rbnXunjXuI8KLBKPhIZ7tDvl9pmIoqM9CzjtI6xxCBY/edit?gid=1510400201#gid=1510400201", 
            sheet = "the_whole_thing")

```
